generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Animation {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  width     Int
  height    Int
  framerate Int
  userid    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  Scene     Scene[]
}

model Frame {
  id        Int      @id @default(autoincrement())
  length    Int      @default(2)
  index     Int
  sceneid   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  Scene     Scene    @relation(fields: [sceneid], references: [id])
}

model Scene {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  index        Int
  userid       Int
  animationid  Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  isDeleted    Boolean        @default(false)
  Frame        Frame[]
  Animation    Animation      @relation(fields: [animationid], references: [id])
  Users_Scenes Users_Scenes[]
}

model Users_Scenes {
  id        Int      @id @default(autoincrement())
  userid    String   @db.VarChar(255)
  sceneid   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  isDeleted Boolean  @default(false)
  Scene     Scene    @relation(fields: [sceneid], references: [id])
}
