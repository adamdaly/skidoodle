name: Playwright Tests
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  e2e:
    env:
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}

      PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ vars.PGADMIN_DEFAULT_PASSWORD }}

      SERVER_URL: ${{ vars.SERVER_URL }}
      DATABASE_URL: ${{ vars.DATABASE_URL }}

      PLAYWRIGHT_BASE_URL: ${{ vars.PLAYWRIGHT_BASE_URL }}
      PLAYWRIGHT_USER_USERNAME: ${{ vars.PLAYWRIGHT_USER_USERNAME }}
      PLAYWRIGHT_USER_PASSWORD: ${{ vars.PLAYWRIGHT_USER_PASSWORD }}

    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Dump all data types
        run: |
          echo "vars ${{ toJson(vars) }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Docker Compose services
        run: |
          make run-build
        working-directory: .

      # - name: Sleep
      #   run: |
      #     sleep 60s

      - name: Start Docker Compose services
        run: |
          docker exec server npm run build
          docker exec server ls -la
          docker exec server ls -la ./dist
        working-directory: .

      # - name: Check Server Port
      #   run: |
      #     docker exec server which netstat || echo "netstat not found"
      #     docker exec server netstat -tuln | grep 3000 || echo "netstat failed with exit code $?"
      #     docker exec server ps -ef || echo "ps failed with exit code $?"
      #     docker exec server ss -tuln | grep ':3000' || echo "ss failed with exit code $?"
      #     docker inspect server --format='{{.State.Status}}'

      # - name: Run e2e tests
      #   working-directory: ./testing/e2e
      #   run: |
      #     npm ci
      #     npx playwright install
      #     npx playwright install-deps
      #     npx playwright test

      # - uses: actions/upload-artifact@v4
      #   if: ${{ !cancelled() }}
      #   with:
      #     name: playwright-report
      #     path: ./testing/e2e/playwright-report/
      #     retention-days: 30

      - name: Check Docker Compose Logs
        if: always() # Run even if previous steps fail
        run: docker compose logs

      - name: Stop Docker Compose services
        if: always() # Run even if previous steps fail
        run: |
          make destroy
        working-directory: .
